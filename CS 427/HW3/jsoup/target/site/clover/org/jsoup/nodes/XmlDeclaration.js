var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":92,"id":3716,"methods":[{"el":25,"sc":5,"sl":21},{"el":37,"sc":5,"sl":35},{"el":41,"sc":5,"sl":39},{"el":49,"sc":5,"sl":47},{"el":63,"sc":5,"sl":55},{"el":72,"sc":5,"sl":65},{"el":83,"sc":5,"sl":74},{"el":86,"sc":5,"sl":85},{"el":91,"sc":5,"sl":88}],"name":"XmlDeclaration","sl":12}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_210":{"methods":[{"sl":21},{"sl":39},{"sl":47}],"name":"supportsXmlCharsetDeclaration","pass":true,"statements":[{"sl":22},{"sl":23},{"sl":24},{"sl":40},{"sl":48}]},"test_235":{"methods":[{"sl":21},{"sl":39},{"sl":65},{"sl":74},{"sl":85}],"name":"testCreatesValidProlog","pass":true,"statements":[{"sl":22},{"sl":23},{"sl":24},{"sl":40},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":75},{"sl":79},{"sl":80}]},"test_316":{"methods":[{"sl":21},{"sl":39},{"sl":47},{"sl":65},{"sl":74},{"sl":85}],"name":"testMetaCharsetUpdateXmlUtf8","pass":true,"statements":[{"sl":22},{"sl":23},{"sl":24},{"sl":40},{"sl":48},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":75},{"sl":79},{"sl":80}]},"test_339":{"methods":[{"sl":21},{"sl":39},{"sl":47},{"sl":65},{"sl":74},{"sl":85}],"name":"testMetaCharsetUpdateXmlIso8859","pass":true,"statements":[{"sl":22},{"sl":23},{"sl":24},{"sl":40},{"sl":48},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":75},{"sl":79},{"sl":80}]},"test_471":{"methods":[{"sl":21},{"sl":39},{"sl":55},{"sl":65},{"sl":74},{"sl":85}],"name":"testParseDeclarationAttributes","pass":true,"statements":[{"sl":22},{"sl":23},{"sl":24},{"sl":40},{"sl":56},{"sl":57},{"sl":58},{"sl":62},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":75},{"sl":79},{"sl":80}]},"test_804":{"methods":[{"sl":21},{"sl":39},{"sl":65},{"sl":74},{"sl":85}],"name":"handlesXmlDeclarationAsDeclaration","pass":true,"statements":[{"sl":22},{"sl":23},{"sl":24},{"sl":40},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":75},{"sl":79},{"sl":80}]},"test_808":{"methods":[{"sl":21},{"sl":39},{"sl":65},{"sl":74},{"sl":85}],"name":"testMetaCharsetUpdateXmlDisabledNoChanges","pass":true,"statements":[{"sl":22},{"sl":23},{"sl":24},{"sl":40},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":75},{"sl":79},{"sl":80}]},"test_854":{"methods":[{"sl":21},{"sl":39},{"sl":65},{"sl":74},{"sl":85}],"name":"caseSensitiveDeclaration","pass":true,"statements":[{"sl":22},{"sl":23},{"sl":24},{"sl":40},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":75},{"sl":79},{"sl":80}]},"test_883":{"methods":[{"sl":21},{"sl":39},{"sl":65},{"sl":74},{"sl":85}],"name":"testMetaCharsetUpdateXmlNoCharset","pass":true,"statements":[{"sl":22},{"sl":23},{"sl":24},{"sl":40},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":75},{"sl":79},{"sl":80}]},"test_934":{"methods":[{"sl":21},{"sl":39},{"sl":47},{"sl":65},{"sl":74},{"sl":85}],"name":"testDetectCharsetEncodingDeclaration","pass":true,"statements":[{"sl":22},{"sl":23},{"sl":24},{"sl":40},{"sl":48},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":75},{"sl":79},{"sl":80}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [316, 883, 210, 339, 471, 808, 235, 804, 854, 934], [316, 883, 210, 339, 471, 808, 235, 804, 854, 934], [316, 883, 210, 339, 471, 808, 235, 804, 854, 934], [316, 883, 210, 339, 471, 808, 235, 804, 854, 934], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [316, 883, 210, 339, 471, 808, 235, 804, 854, 934], [316, 883, 210, 339, 471, 808, 235, 804, 854, 934], [], [], [], [], [], [], [316, 210, 339, 934], [316, 210, 339, 934], [], [], [], [], [], [], [471], [471], [471], [471], [], [], [], [471], [], [], [316, 883, 339, 471, 808, 235, 804, 854, 934], [316, 883, 339, 471, 808, 235, 804, 854, 934], [316, 883, 339, 471, 808, 235, 804, 854, 934], [316, 883, 339, 471, 808, 235, 804, 854, 934], [316, 883, 339, 471, 808, 235, 804, 854, 934], [], [], [], [], [316, 883, 339, 471, 808, 235, 804, 854, 934], [316, 883, 339, 471, 808, 235, 804, 854, 934], [], [], [], [316, 883, 339, 471, 808, 235, 804, 854, 934], [316, 883, 339, 471, 808, 235, 804, 854, 934], [], [], [], [], [316, 883, 339, 471, 808, 235, 804, 854, 934], [], [], [], [], [], [], []]
